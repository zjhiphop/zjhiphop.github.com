<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width">
<meta name="theme-color" content="#222"><meta name="generator" content="Hexo 6.3.0">

  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-next.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-next.png">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">

<link rel="stylesheet" href="/css/main.css">



<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css" integrity="sha256-Z1K5uhUaJXA7Ll0XrZ/0JhX4lAtZFpT6jkKrEDT0drU=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.1.1/animate.min.css" integrity="sha256-PR7ttpcvz8qrF57fur/yAx1qXMFJeJFiA6pSzWi0OIE=" crossorigin="anonymous">

<script class="next-config" data-name="main" type="application/json">{"hostname":"zjhihpop.github.io","root":"/","images":"/images","scheme":"Muse","darkmode":false,"version":"8.14.1","exturl":false,"sidebar":{"position":"left","display":"post","padding":18,"offset":12},"copycode":{"enable":false,"style":null},"bookmark":{"enable":false,"color":"#222","save":"auto"},"mediumzoom":false,"lazyload":false,"pangu":false,"comments":{"style":"tabs","active":null,"storage":true,"lazyload":false,"nav":null},"stickytabs":false,"motion":{"enable":true,"async":false,"transition":{"menu_item":"fadeInDown","post_block":"fadeIn","post_header":"fadeInDown","post_body":"fadeInDown","coll_header":"fadeInLeft","sidebar":"fadeInUp"}},"prism":false,"i18n":{"placeholder":"搜索...","empty":"没有找到任何搜索结果：${query}","hits_time":"找到 ${hits} 个搜索结果（用时 ${time} 毫秒）","hits":"找到 ${hits} 个搜索结果"}}</script><script src="/js/config.js"></script>

    <meta name="description" content="前言 架构，又名软件架构，是有关软件整体结构与组件的抽象描述，用于指导大型软件系统各个方面的设计。 架构描述语言（ADL）用于描述软件的体系架构。  在谈这个话题前， 首先回答一个问题， 前端需要架构吗？ 架构从概念上包含三个部分， 一个是整体结构，另一个是个体，还有就是个体之间的关系。 本质上来讲， 只要复杂的软件系统就需要架构， 因为复杂度会带来“熵”，不利于项目整体的开发和维护，容易滋生潜在">
<meta property="og:type" content="article">
<meta property="og:title" content="前端架构之熵">
<meta property="og:url" content="http://zjhihpop.github.io/2018/05/30/%E5%89%8D%E7%AB%AF%E6%9E%B6%E6%9E%84%E4%B9%8B%E7%86%B5">
<meta property="og:site_name" content="Jade&#39;s Fantastic Blog">
<meta property="og:description" content="前言 架构，又名软件架构，是有关软件整体结构与组件的抽象描述，用于指导大型软件系统各个方面的设计。 架构描述语言（ADL）用于描述软件的体系架构。  在谈这个话题前， 首先回答一个问题， 前端需要架构吗？ 架构从概念上包含三个部分， 一个是整体结构，另一个是个体，还有就是个体之间的关系。 本质上来讲， 只要复杂的软件系统就需要架构， 因为复杂度会带来“熵”，不利于项目整体的开发和维护，容易滋生潜在">
<meta property="og:locale" content="zh_CN">
<meta property="og:image" content="https://diycode.b0.upaiyun.com/photo/2018/f2f694a6b00c184a0ed3dec8dd99f3b5.png">
<meta property="article:published_time" content="2018-05-30T03:42:15.000Z">
<meta property="article:modified_time" content="2023-01-05T04:30:42.639Z">
<meta property="article:author" content="Jade Zhang">
<meta property="article:tag" content="架构">
<meta property="article:tag" content="前端">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://diycode.b0.upaiyun.com/photo/2018/f2f694a6b00c184a0ed3dec8dd99f3b5.png">


<link rel="canonical" href="http://zjhihpop.github.io/2018/05/30/%E5%89%8D%E7%AB%AF%E6%9E%B6%E6%9E%84%E4%B9%8B%E7%86%B5">



<script class="next-config" data-name="page" type="application/json">{"sidebar":"","isHome":false,"isPost":true,"lang":"zh-CN","comments":true,"permalink":"http://zjhihpop.github.io/2018/05/30/%E5%89%8D%E7%AB%AF%E6%9E%B6%E6%9E%84%E4%B9%8B%E7%86%B5","path":"2018/05/30/前端架构之熵","title":"前端架构之熵"}</script>

<script class="next-config" data-name="calendar" type="application/json">""</script>
<title>前端架构之熵 | Jade's Fantastic Blog</title>
  






  <script async defer data-website-id="" src=""></script>

  <script defer data-domain="" src=""></script>

  <noscript>
    <link rel="stylesheet" href="/css/noscript.css">
  </noscript>
</head>

<body itemscope itemtype="http://schema.org/WebPage" class="use-motion">
  <div class="headband"></div>

  <main class="main">
    <div class="column">
      <header class="header" itemscope itemtype="http://schema.org/WPHeader"><div class="site-brand-container">
  <div class="site-nav-toggle">
    <div class="toggle" aria-label="切换导航栏" role="button">
    </div>
  </div>

  <div class="site-meta">

    <a href="/" class="brand" rel="start">
      <i class="logo-line"></i>
      <p class="site-title">Jade's Fantastic Blog</p>
      <i class="logo-line"></i>
    </a>
  </div>

  <div class="site-nav-right">
    <div class="toggle popup-trigger" aria-label="搜索" role="button">
    </div>
  </div>
</div>







</header>
        
  
  <aside class="sidebar">

    <div class="sidebar-inner sidebar-nav-active sidebar-toc-active">
      <ul class="sidebar-nav">
        <li class="sidebar-nav-toc">
          文章目录
        </li>
        <li class="sidebar-nav-overview">
          站点概览
        </li>
      </ul>

      <div class="sidebar-panel-container">
        <!--noindex-->
        <div class="post-toc-wrap sidebar-panel">
            <div class="post-toc animated"><ol class="nav"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%89%8D%E8%A8%80"><span class="nav-number">1.</span> <span class="nav-text">前言</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%89%8D%E7%AB%AF%E5%8F%91%E5%B1%95%E5%8E%86%E7%A8%8B"><span class="nav-number">2.</span> <span class="nav-text">前端发展历程</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E6%9C%AA%E6%9D%A5%E7%9A%84%E5%8F%91%E5%B1%95%E8%B6%8B%E5%8A%BF"><span class="nav-number">3.</span> <span class="nav-text">未来的发展趋势</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E7%BB%93%E8%AF%AD"><span class="nav-number">4.</span> <span class="nav-text">结语</span></a></li></ol></div>
        </div>
        <!--/noindex-->

        <div class="site-overview-wrap sidebar-panel">
          <div class="site-author animated" itemprop="author" itemscope itemtype="http://schema.org/Person">
  <p class="site-author-name" itemprop="name">Jade Zhang</p>
  <div class="site-description" itemprop="description"></div>
</div>
<div class="site-state-wrap animated">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
        <a href="/archives/">
          <span class="site-state-item-count">11</span>
          <span class="site-state-item-name">日志</span>
        </a>
      </div>
      <div class="site-state-item site-state-tags">
        <span class="site-state-item-count">8</span>
        <span class="site-state-item-name">标签</span>
      </div>
  </nav>
</div>

        </div>
      </div>
    </div>

    
  </aside>


    </div>

    <div class="main-inner post posts-expand">


  


<div class="post-block">
  
  

  <article itemscope itemtype="http://schema.org/Article" class="post-content" lang="zh-CN">
    <link itemprop="mainEntityOfPage" href="http://zjhihpop.github.io/2018/05/30/%E5%89%8D%E7%AB%AF%E6%9E%B6%E6%9E%84%E4%B9%8B%E7%86%B5">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/avatar.gif">
      <meta itemprop="name" content="Jade Zhang">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="Jade's Fantastic Blog">
      <meta itemprop="description" content="">
    </span>

    <span hidden itemprop="post" itemscope itemtype="http://schema.org/CreativeWork">
      <meta itemprop="name" content="前端架构之熵 | Jade's Fantastic Blog">
      <meta itemprop="description" content="">
    </span>
      <header class="post-header">
        <h1 class="post-title" itemprop="name headline">
          前端架构之熵
        </h1>

        <div class="post-meta-container">
          <div class="post-meta">
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar"></i>
      </span>
      <span class="post-meta-item-text">发表于</span>

      <time title="创建时间：2018-05-30 11:42:15" itemprop="dateCreated datePublished" datetime="2018-05-30T11:42:15+08:00">2018-05-30</time>
    </span>
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar-check"></i>
      </span>
      <span class="post-meta-item-text">更新于</span>
      <time title="修改时间：2023-01-05 12:30:42" itemprop="dateModified" datetime="2023-01-05T12:30:42+08:00">2023-01-05</time>
    </span>

  
</div>

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody">
        <h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote>
<p>架构，又名软件架构，是有关软件整体结构与组件的抽象描述，用于指导大型软件系统各个方面的设计。 架构描述语言（ADL）用于描述软件的体系架构。</p>
</blockquote>
<p>在谈这个话题前， 首先回答一个问题， 前端需要架构吗？</p>
<p>架构从概念上包含三个部分， 一个是整体结构，另一个是个体，还有就是个体之间的关系。 本质上来讲， 只要复杂的软件系统就需要架构， 因为复杂度会带来“熵”，不利于项目整体的开发和维护，容易滋生潜在的问题。当然架构也不是银弹，在不同的软件体系里架构所做的是一个权衡， 在不同的方面做取舍，达到一个动态的平衡。那么对于前端来说，复杂度体现在哪些方面？</p>
<ul>
<li>页面多</li>
<li>业务逻辑复杂</li>
<li>终端类型多： 不同的浏览器内核，分辨率，ES规范支持度</li>
<li>请求多：资源文件，异步数据，WebSocket等</li>
<li>第三方的服务</li>
<li>浏览器插件交互：截图，获取数据，网络代理等</li>
<li>网络安全：XSS，CSRF，SQL注入</li>
</ul>
<p>以上我只是列举了一部分内容，在现代化的大型开发项目中，大家可以看到前端的复杂度可能已经超过了后端的复杂度，所以说前端目前需要架构。</p>
<h3 id="前端发展历程"><a href="#前端发展历程" class="headerlink" title="前端发展历程"></a>前端发展历程</h3><p><img src="https://diycode.b0.upaiyun.com/photo/2018/f2f694a6b00c184a0ed3dec8dd99f3b5.png"></p>
<ul>
<li>单web页面<blockquote>
<p>在这个时代页面所有的逻辑都放在一起，一个页面包括所有的JS&#x2F;CSS&#x2F;HTML， 甚至是后台代码，典型代表：ASP&#x2F;JSP&#x2F;PHP等</p>
</blockquote>
</li>
</ul>
<ul>
<li>优点：整体页面逻辑清晰，方便修改</li>
<li>缺点：不利于多方协作开发</li>
</ul>
<ul>
<li>逻辑展现结构分离<blockquote>
<p>随着页面逻辑越来越多，但页面已经无力维护，这时候需要迫切拆分样式（CSS）和逻辑（JS）、以及结构（HTML），并分别维护</p>
</blockquote>
</li>
</ul>
<ul>
<li>优点：分离关注点</li>
<li>缺点：业务逻辑还是放在一起，不易维护</li>
</ul>
<ul>
<li>组合和插件化<blockquote>
<p> 业务逻辑变得越来越多，单个JS已经无法支撑，这个时候迫切需要对逻辑进行拆分，以适应复杂页面的需要。拆分的总体思路是提供一个基础的系统，对外扩展开放，对内修改关闭，就是常说的开闭原则。常见的做法有两种方式：</p>
</blockquote>
</li>
</ul>
<ul>
<li>提供一个Base基础类，然后基于Base类进行Compose扩展新功能， 如：TroopJS</li>
<li>提供一个微内核，外围功能通过插件的方式注入，如：jQuery UI</li>
</ul>
<blockquote>
<p>优点：面向变化<br>   缺点：无法体系化和规范化</p>
</blockquote>
<ul>
<li>AMD&#x2F;CMD&#x2F;UMD&#x2F;MVC&#x2F;MVVM&#x2F;ES Module<blockquote>
<p>项目中外围功能越来越多，单纯的插件和组合方式已经难以满足业务的需求， 最明显的一个问题是首次加载的库依赖过大，另一个是项目如果对第三方有依赖，很难按照统一的规范来引入。所以在这个阶段出现了：</p>
</blockquote>
</li>
</ul>
<ul>
<li>AMD：异步模块依赖加载，解决浏览器端模块加载和模块规范问题， 例如： RequireJS</li>
<li>CMD：通用模块依赖加载，用于服务端module加载， 例如：NodeJS</li>
<li>UMD：统一模块依赖加载，主要解决多端统一模块加载规范， 例如：Rhino&#x2F;NodeJS&#x2F;浏览器端用同一套规范</li>
<li>MVC：后端的经典架构模式， 拆分Model&#x2F;View&#x2F;Controller，职责模块分离。 例如：Backbone&#x2F;Konckout</li>
<li>MVVM：在MVC的基础上去除了Controller层，增加了ViewModel层，主要解决Model和View变化响应的问题， 典型代表：AngularJS 1.0</li>
<li>ES Module： ES6自带模块加载器</li>
</ul>
<blockquote>
<p>优点: 模块拆分清晰，加载分明，外部依赖加载规范<br>缺点：每个模块的JS和CSS修改需要到统一的目录去修改，对于公用的模块加载还是会有冗余， 对于复杂项目无法快速拼装</p>
</blockquote>
<ul>
<li>组件化<blockquote>
<p>组件化的发展起源于Facebook，由于Facebook页面Widget非常的多， 每个Widget加载都有相关的细粒度的依赖，所以Facebook提出了BigPipe的概念，把页面的每个部分分别作为一个独立的部分异步加载， 包括JS和CSS。随着项目的推进和不端规范化， 开源了React组件开发框架。React的优秀之处在于几个创新：VirtualDom，数据彻底分离出去，把JS&#x2F;CSS&#x2F;HTML当成一个组件处理。这样做的好处显而易见：</p>
</blockquote>
</li>
</ul>
<ul>
<li>页面按需渲染</li>
<li>搭积木的方式构建</li>
<li>不包含业务逻辑</li>
<li>响应式变化</li>
</ul>
<blockquote>
<p>作为后起之秀的VueJS， 充分吸收了React的VirtualDom概念，并提供数据双向绑定机制， 通过依赖跟踪Check提高了脏检查的效率，同时在API层做到了精简，拨洋葱式的架构组合，在选择上灵活多样。</p>
</blockquote>
<h3 id="未来的发展趋势"><a href="#未来的发展趋势" class="headerlink" title="未来的发展趋势"></a>未来的发展趋势</h3><ul>
<li>组件标准化： 随着WebComponents标准的建立和Polymer等优秀框架的实践，在前端的架构体系和标准化方面逐渐完善</li>
<li>服务本地化：以Amazon Lambda服务为首的Serverless概念对于前端开发是一个大的变革，结合ServiceWorker打造PWA应用是一个应用趋势</li>
<li>语言静态化：JS最为人诟病的是运行时异常， 通过引入类型系统做到在开发时异常检测，避免线上出现未知的运行时异常， 主要代表： TypeScript&#x2F;Flow&#x2F;Elm</li>
<li>构建智能化：自动解析前端的资源文件，第三方的依赖并打包，不同环境的代码自动化部署、测试、集成，以及前端AI等技术的出现会在一定程度上会改变现有的前端开发流程</li>
<li>AR&#x2F;VR：WebAssembly将会是的浏览器端能够负担更多的底层工作，对于内存管理更加高效，对于复杂高密度的工作放在前端执行增加了可能性， 典型的应用：VR&#x2F;AR游戏，实时视频电话会议等</li>
</ul>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>前端的复杂性表现在各个方面，这里篇幅有限，介绍还不够细致。不过可以肯定的是，作为前端开发人员，已经远远不是会写JS代码这么简单，需要不断的参与到社区的学习中去，并加以实践，总结提炼出适合项目的架构方式， 提高自己开发和协作效率变得尤为重要。接下来，我会带领大家逐个学习前端的方方面面，体验前端开发的乐趣， 敬请期待</p>
<p>由于水平有限，有不当之处请批评指正，一起学习！</p>

    </div>

    
    
    

    <footer class="post-footer">
          <div class="post-tags">
              <a href="/tags/%E6%9E%B6%E6%9E%84/" rel="tag"># 架构</a>
              <a href="/tags/%E5%89%8D%E7%AB%AF/" rel="tag"># 前端</a>
          </div>

        

          <div class="post-nav">
            <div class="post-nav-item">
            </div>
            <div class="post-nav-item">
                <a href="/2018/06/18/Think-in-startup" rel="next" title="Think in startup">
                  Think in startup <i class="fa fa-chevron-right"></i>
                </a>
            </div>
          </div>
    </footer>
  </article>
</div>






</div>
  </main>

  <footer class="footer">
    <div class="footer-inner">


<div class="copyright">
  &copy; 
  <span itemprop="copyrightYear">2023</span>
  <span class="with-love">
    <i class="fa fa-heart"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">Jade Zhang</span>
</div>
  <div class="powered-by">由 <a href="https://hexo.io/" rel="noopener" target="_blank">Hexo</a> & <a href="https://theme-next.js.org/muse/" rel="noopener" target="_blank">NexT.Muse</a> 强力驱动
  </div>

    </div>
  </footer>

  
  <div class="toggle sidebar-toggle" role="button">
    <span class="toggle-line"></span>
    <span class="toggle-line"></span>
    <span class="toggle-line"></span>
  </div>
  <div class="sidebar-dimmer"></div>
  <div class="back-to-top" role="button" aria-label="返回顶部">
    <i class="fa fa-arrow-up fa-lg"></i>
    <span>0%</span>
  </div>

<noscript>
  <div class="noscript-warning">Theme NexT works best with JavaScript enabled</div>
</noscript>


  
  <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js" integrity="sha256-XL2inqUJaslATFnHdJOi9GfQ60on8Wx1C2H8DYiN1xY=" crossorigin="anonymous"></script>
<script src="/js/comments.js"></script><script src="/js/utils.js"></script><script src="/js/motion.js"></script><script src="/js/schemes/muse.js"></script><script src="/js/next-boot.js"></script>

  




  





</body>
</html>
